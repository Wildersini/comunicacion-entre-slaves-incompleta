

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 23:38:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001F                     _ADCON0	set	31
   285  0008                     _PORTDbits	set	8
   286  0006                     _PORTB	set	6
   287  001E                     _ADRESH	set	30
   288  001F                     _ADCON0bits	set	31
   289  0005                     _PORTA	set	5
   290  009F                     _ADCON1	set	159
   291  0085                     _TRISAbits	set	133
   292  0086                     _TRISB	set	134
   293  0088                     _TRISD	set	136
   294  0189                     _ANSELH	set	393
   295  0188                     _ANSELbits	set	392
   296                           
   297                           	psect	cinit
   298  07FB                     start_initialization:	
   299                           ; #config settings
   300                           
   301  07FB                     __initialization:
   302                           
   303                           ; Clear objects allocated to COMMON
   304  07FB  01F0               	clrf	__pbssCOMMON& (0+127)
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  2FD2   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	bssCOMMON
   313  0070                     __pbssCOMMON:
   314  0070                     _CONVERSION:
   315  0070                     	ds	1
   316                           
   317                           	psect	cstackCOMMON
   318  0071                     __pcstackCOMMON:
   319  0071                     ?_conf_ADC:
   320  0071                     ??_conf_ADC:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0071                     ?_TAD:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0071                     ??_TAD:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0071                     ?_AD_cycle:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0071                     ??_AD_cycle:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0071                     ?_setup:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0071                     ??_setup:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0071                     ?_ADC:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0071                     ??_ADC:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0071                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352  0071                     	ds	1
   353  0072                     ??_main:
   354                           
   355                           	psect	maintext
   356  07D2                     __pmaintext:	
   357                           ; 1 bytes @ 0x1
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 52 in file "SLAVE_3.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, pclath, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : B00/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels required when called:    2
   383 ;; This function calls:
   384 ;;		_ADC
   385 ;;		_setup
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _main
   393  07D2                     _main:
   394  07D2                     l682:	
   395                           ;incstack = 0
   396                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   397                           
   398                           
   399                           ;SLAVE_3.c: 53: 
   400  07D2  120A  118A  27B9  120A  118A  	fcall	_setup
   401  07D7                     l40:	
   402                           ;SLAVE_3.c: 54:     }
   403                           
   404                           
   405                           ;SLAVE_3.c: 55: }
   406  07D7  120A  118A  27A1  120A  118A  	fcall	_ADC
   407  07DC                     l684:
   408  07DC  0870               	movf	_CONVERSION,w
   409  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   410  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   411  07DF  0086               	movwf	6	;volatile
   412  07E0                     l686:
   413  07E0  300D               	movlw	13
   414  07E1  0270               	subwf	_CONVERSION,w
   415  07E2  1803               	skipnc
   416  07E3  2FE5               	goto	u21
   417  07E4  2FE6               	goto	u20
   418  07E5                     u21:
   419  07E5  2FEA               	goto	l690
   420  07E6                     u20:
   421  07E6                     l688:
   422  07E6  1008               	bcf	8,0	;volatile
   423  07E7  1088               	bcf	8,1	;volatile
   424  07E8  1508               	bsf	8,2	;volatile
   425  07E9  2FD7               	goto	l40
   426  07EA                     l690:
   427  07EA  3012               	movlw	18
   428  07EB  0270               	subwf	_CONVERSION,w
   429  07EC  1803               	skipnc
   430  07ED  2FEF               	goto	u31
   431  07EE  2FF0               	goto	u30
   432  07EF                     u31:
   433  07EF  2FF4               	goto	l43
   434  07F0                     u30:
   435  07F0                     l692:
   436  07F0  1008               	bcf	8,0	;volatile
   437  07F1  1488               	bsf	8,1	;volatile
   438  07F2  1108               	bcf	8,2	;volatile
   439  07F3  2FD7               	goto	l40
   440  07F4                     l43:
   441  07F4  1408               	bsf	8,0	;volatile
   442  07F5  1088               	bcf	8,1	;volatile
   443  07F6  1108               	bcf	8,2	;volatile
   444  07F7  2FD7               	goto	l40
   445  07F8  120A  118A  2800   	ljmp	start
   446  07FB                     __end_of_main:
   447                           
   448                           	psect	text1
   449  07B9                     __ptext1:	
   450 ;; *************** function _setup *****************
   451 ;; Defined at:
   452 ;;		line 32 in file "SLAVE_3.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    1
   473 ;; This function calls:
   474 ;;		_conf_ADC
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _setup
   482  07B9                     _setup:
   483  07B9                     l664:	
   484                           ;incstack = 0
   485                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;SLAVE_3.c: 35:         PORTB=CONVERSION;
   489  07B9  1683               	bsf	3,5	;RP0=1, select bank3
   490  07BA  1703               	bsf	3,6	;RP1=1, select bank3
   491  07BB  1008               	bcf	8,0	;volatile
   492  07BC                     l666:
   493                           
   494                           ;SLAVE_3.c: 36:        if(CONVERSION<0b00001101){
   495  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   496  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   497  07BE  0188               	clrf	8	;volatile
   498                           
   499                           ;SLAVE_3.c: 37:           PORTDbits.RD0=0;
   500  07BF  0186               	clrf	6	;volatile
   501                           
   502                           ;SLAVE_3.c: 38:           PORTDbits.RD1=0;
   503  07C0  1683               	bsf	3,5	;RP0=1, select bank3
   504  07C1  1703               	bsf	3,6	;RP1=1, select bank3
   505  07C2  0189               	clrf	9	;volatile
   506                           
   507                           ;SLAVE_3.c: 39:           PORTDbits.RD2=1;
   508  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   509  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   510  07C5  0185               	clrf	5	;volatile
   511  07C6                     l668:
   512                           
   513                           ;SLAVE_3.c: 40: 
   514  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   515  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   516  07C8  1405               	bsf	5,0	;volatile
   517  07C9                     l670:
   518                           
   519                           ;SLAVE_3.c: 41:         }
   520  07C9  1683               	bsf	3,5	;RP0=1, select bank3
   521  07CA  1703               	bsf	3,6	;RP1=1, select bank3
   522  07CB  1408               	bsf	8,0	;volatile
   523  07CC                     l672:
   524                           
   525                           ;SLAVE_3.c: 42:         else if(CONVERSION<0b00010010){
   526  07CC  120A  118A  278E  120A  118A  	fcall	_conf_ADC
   527  07D1                     l31:
   528  07D1  0008               	return
   529  07D2                     __end_of_setup:
   530                           
   531                           	psect	text2
   532  078E                     __ptext2:	
   533 ;; *************** function _conf_ADC *****************
   534 ;; Defined at:
   535 ;;		line 6 in file "ADC.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0
   552 ;;      Totals:         0       0       0       0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_setup
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _conf_ADC
   564  078E                     _conf_ADC:
   565  078E                     l654:	
   566                           ;incstack = 0
   567                           ; Regs used in _conf_ADC: [wreg+status,2]
   568                           
   569                           
   570                           ;ADC.c: 7: ADCON1 = 0b00000000;
   571  078E  1683               	bsf	3,5	;RP0=1, select bank1
   572  078F  1303               	bcf	3,6	;RP1=0, select bank1
   573  0790  019F               	clrf	31	;volatile
   574  0791                     l656:
   575                           
   576                           ;ADC.c: 8: ADCON0 = 0b10000001;
   577  0791  3081               	movlw	129
   578  0792  1283               	bcf	3,5	;RP0=0, select bank0
   579  0793  1303               	bcf	3,6	;RP1=0, select bank0
   580  0794  009F               	movwf	31	;volatile
   581  0795                     l56:
   582  0795  0008               	return
   583  0796                     __end_of_conf_ADC:
   584                           
   585                           	psect	text3
   586  07A1                     __ptext3:	
   587 ;; *************** function _ADC *****************
   588 ;; Defined at:
   589 ;;		line 44 in file "SLAVE_3.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          1       0       0       0       0
   606 ;;      Totals:         1       0       0       0       0
   607 ;;Total ram usage:        1 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    1
   610 ;; This function calls:
   611 ;;		_AD_cycle
   612 ;;		_TAD
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _ADC
   620  07A1                     _ADC:
   621  07A1                     l674:	
   622                           ;incstack = 0
   623                           ; Regs used in _ADC: [wreg+status,2+status,0+pclath+cstack]
   624                           
   625                           
   626                           ;SLAVE_3.c: 45:            PORTDbits.RD2=0;
   627  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   628  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   629  07A3  1C9F               	btfss	31,1	;volatile
   630  07A4  2FA6               	goto	u11
   631  07A5  2FA7               	goto	u10
   632  07A6                     u11:
   633  07A6  2FA8               	goto	l678
   634  07A7                     u10:
   635  07A7  2FB8               	goto	l35
   636  07A8                     l678:
   637                           
   638                           ;SLAVE_3.c: 48:         else{
   639  07A8  120A  118A  2796  120A  118A  	fcall	_TAD
   640                           
   641                           ;SLAVE_3.c: 49:            PORTDbits.RD0=1;
   642  07AD  120A  118A  278A  120A  118A  	fcall	_AD_cycle
   643  07B2                     l680:
   644                           
   645                           ;SLAVE_3.c: 50:            PORTDbits.RD1=0;
   646  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   647  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   648  07B4  081E               	movf	30,w	;volatile
   649  07B5  00F1               	movwf	??_ADC
   650  07B6  0871               	movf	??_ADC,w
   651  07B7  00F0               	movwf	_CONVERSION
   652  07B8                     l35:
   653  07B8  0008               	return
   654  07B9                     __end_of_ADC:
   655                           
   656                           	psect	text4
   657  0796                     __ptext4:	
   658 ;; *************** function _TAD *****************
   659 ;; Defined at:
   660 ;;		line 16 in file "ADC.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		None
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; This function calls:
   681 ;;		Nothing
   682 ;; This function is called by:
   683 ;;		_ADC
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _TAD
   689  0796                     _TAD:
   690  0796                     l660:	
   691                           ;incstack = 0
   692                           ; Regs used in _TAD: []
   693                           
   694  0796  0000               	nop	;# 
   695  0797  0000               	nop	;# 
   696  0798  0000               	nop	;# 
   697  0799  0000               	nop	;# 
   698  079A  0000               	nop	;# 
   699  079B  0000               	nop	;# 
   700  079C  0000               	nop	;# 
   701  079D  0000               	nop	;# 
   702  079E  0000               	nop	;# 
   703  079F  0000               	nop	;# 
   704  07A0                     l62:
   705  07A0  0008               	return
   706  07A1                     __end_of_TAD:
   707                           
   708                           	psect	text5
   709  078A                     __ptext5:	
   710 ;; *************** function _AD_cycle *****************
   711 ;; Defined at:
   712 ;;		line 11 in file "ADC.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		None
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_ADC
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _AD_cycle
   741  078A                     _AD_cycle:
   742  078A                     l662:	
   743                           ;incstack = 0
   744                           ; Regs used in _AD_cycle: []
   745                           
   746                           
   747                           ;ADC.c: 12: ADCON0bits.GO = 1;
   748  078A  1283               	bcf	3,5	;RP0=0, select bank0
   749  078B  1303               	bcf	3,6	;RP1=0, select bank0
   750  078C  149F               	bsf	31,1	;volatile
   751  078D                     l59:	
   752                           ;ADC.c: 14: return;
   753                           
   754  078D  0008               	return
   755  078E                     __end_of_AD_cycle:
   756  007E                     btemp	set	126	;btemp
   757  007E                     wtemp0	set	126
   758                           
   759                           	psect	config
   760                           
   761                           ;Config register CONFIG1 @ 0x2007
   762                           ;	Oscillator Selection bits
   763                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   764                           ;	Watchdog Timer Enable bit
   765                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   766                           ;	Power-up Timer Enable bit
   767                           ;	PWRTE = OFF, PWRT disabled
   768                           ;	RE3/MCLR pin function select bit
   769                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   770                           ;	Code Protection bit
   771                           ;	CP = OFF, Program memory code protection is disabled
   772                           ;	Data Code Protection bit
   773                           ;	CPD = OFF, Data memory code protection is disabled
   774                           ;	Brown Out Reset Selection bits
   775                           ;	BOREN = OFF, BOR disabled
   776                           ;	Internal External Switchover bit
   777                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   778                           ;	Fail-Safe Clock Monitor Enabled bit
   779                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   780                           ;	Low Voltage Programming Enable bit
   781                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   782                           ;	In-Circuit Debugger Mode bit
   783                           ;	DEBUG = 0x1, unprogrammed default
   784  2007                     	org	8199
   785  2007  20D7               	dw	8407
   786                           
   787                           ;Config register CONFIG2 @ 0x2008
   788                           ;	Brown-out Reset Selection bit
   789                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   790                           ;	Flash Program Memory Self Write Enable bits
   791                           ;	WRT = OFF, Write protection off
   792  2008                     	org	8200
   793  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                           _conf_ADC
 ---------------------------------------------------------------------------------
 (2) _conf_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
                           _AD_cycle
                                _TAD
 ---------------------------------------------------------------------------------
 (2) _TAD                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_cycle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _AD_cycle
     _TAD
   _setup
     _conf_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       2      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 23:38:20 2021

                     l31 07D1                       l40 07D7                       l35 07B8  
                     l43 07F4                       l62 07A0                       l56 0795  
                     l59 078D                       u10 07A7                       u11 07A6  
                     u20 07E6                       u21 07E5                       u30 07F0  
                     u31 07EF                      _ADC 07A1                      l660 0796  
                    l662 078A                      l654 078E                      l670 07C9  
                    l680 07B2                      l656 0791                      l672 07CC  
                    l664 07B9                      l674 07A1                      l666 07BC  
                    l690 07EA                      l682 07D2                      l668 07C6  
                    l692 07F0                      l684 07DC                      l678 07A8  
                    l686 07E0                      l688 07E6                      _TAD 0796  
                   ?_ADC 0071                     ?_TAD 0071                     _main 07D2  
                   btemp 007E                     start 0000                    ??_ADC 0071  
                  ??_TAD 0071         __end_of_AD_cycle 078E                    ?_main 0071  
                  _PORTA 0005                    _PORTB 0006                    _TRISB 0086  
                  _TRISD 0088                    _setup 07B9                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
                 ??_main 0072                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0071                   _ANSELH 0189  
       __end_of_conf_ADC 0796                ?_AD_cycle 0071  __end_of__initialization 07FC  
         __pcstackCOMMON 0071            __end_of_setup 07D2                  ??_setup 0071  
             ??_AD_cycle 0071               __pmaintext 07D2                ?_conf_ADC 0071  
              _ANSELbits 0188                  __ptext1 07B9                  __ptext2 078E  
                __ptext3 07A1                  __ptext4 0796                  __ptext5 078A  
           __size_of_ADC 0018             __size_of_TAD 000B               ??_conf_ADC 0071  
   end_of_initialization 07FC                _PORTDbits 0008                _TRISAbits 0085  
      __size_of_AD_cycle 0004      start_initialization 07FB              __end_of_ADC 07B9  
            __end_of_TAD 07A1              __pbssCOMMON 0070                ___latbits 0002  
      __size_of_conf_ADC 0008           __size_of_setup 0019                 _AD_cycle 078A  
             _ADCON0bits 001F                 _conf_ADC 078E               _CONVERSION 0070  
          __size_of_main 0029  

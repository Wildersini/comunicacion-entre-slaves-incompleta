

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 21 22:38:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  001F                     _ADCON0	set	31
   284  001F                     _ADCON0bits	set	31
   285  0005                     _PORTA	set	5
   286  001E                     _ADRESH	set	30
   287  0008                     _PORTD	set	8
   288  009F                     _ADCON1	set	159
   289  0085                     _TRISAbits	set	133
   290  0088                     _TRISD	set	136
   291  0188                     _ANSELbits	set	392
   292                           
   293                           	psect	cinit
   294  07FC                     start_initialization:	
   295                           ; #config settings
   296                           
   297  07FC                     __initialization:
   298  07FC                     end_of_initialization:	
   299                           ;End of C runtime variable initialization code
   300                           
   301  07FC                     __end_of__initialization:
   302  07FC  0183               	clrf	3
   303  07FD  120A  118A  2FD5   	ljmp	_main	;jump to C main() function
   304                           
   305                           	psect	cstackCOMMON
   306  0000                     __pcstackCOMMON:
   307  0000                     ?_setup:
   308  0000                     ??_setup:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0000                     ?_ADC:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0000                     ??_ADC:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0000                     ?_conf_ADC:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0000                     ??_conf_ADC:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0000                     ?_TAD:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0000                     ??_TAD:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0000                     ?_AD_cycle:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0000                     ??_AD_cycle:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0000                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0000                     ??_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           	psect	maintext
   343  07D5                     __pmaintext:	
   344                           ; 1 bytes @ 0x0
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 32 in file "SLAVE_1.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels required when called:    2
   370 ;; This function calls:
   371 ;;		_ADC
   372 ;;		_setup
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  07D5                     _main:
   381  07D5                     l672:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   384                           
   385                           
   386                           ;SLAVE_1.c: 33:     setup();
   387  07D5  120A  118A  27E7  120A  118A  	fcall	_setup
   388  07DA                     l674:
   389                           
   390                           ;SLAVE_1.c: 35:         ADC();
   391  07DA  120A  118A  27C3  120A  118A  	fcall	_ADC
   392                           
   393                           ;SLAVE_1.c: 36:         PORTD=ADRESH;
   394  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   395  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   396  07E1  081E               	movf	30,w	;volatile
   397  07E2  0088               	movwf	8	;volatile
   398  07E3  2FDA               	goto	l674
   399  07E4  120A  118A  2800   	ljmp	start
   400  07E7                     __end_of_main:
   401                           
   402                           	psect	text1
   403  07E7                     __ptext1:	
   404 ;; *************** function _setup *****************
   405 ;; Defined at:
   406 ;;		line 43 in file "SLAVE_1.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used:    1
   426 ;; Hardware stack levels required when called:    1
   427 ;; This function calls:
   428 ;;		_conf_ADC
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _setup
   436  07E7                     _setup:
   437  07E7                     l656:	
   438                           ;incstack = 0
   439                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;SLAVE_1.c: 45:     ANSELbits.ANS0 = 0;
   443  07E7  1683               	bsf	3,5	;RP0=1, select bank3
   444  07E8  1703               	bsf	3,6	;RP1=1, select bank3
   445  07E9  1008               	bcf	8,0	;volatile
   446  07EA                     l658:
   447                           
   448                           ;SLAVE_1.c: 46:     TRISD= 0;
   449  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   450  07EB  1303               	bcf	3,6	;RP1=0, select bank1
   451  07EC  0188               	clrf	8	;volatile
   452                           
   453                           ;SLAVE_1.c: 48:     PORTA=0;
   454  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   455  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   456  07EF  0185               	clrf	5	;volatile
   457  07F0                     l660:
   458                           
   459                           ;SLAVE_1.c: 49:     TRISAbits.TRISA0=1;
   460  07F0  1683               	bsf	3,5	;RP0=1, select bank1
   461  07F1  1303               	bcf	3,6	;RP1=0, select bank1
   462  07F2  1405               	bsf	5,0	;volatile
   463  07F3                     l662:
   464                           
   465                           ;SLAVE_1.c: 50:     ANSELbits.ANS0=1;
   466  07F3  1683               	bsf	3,5	;RP0=1, select bank3
   467  07F4  1703               	bsf	3,6	;RP1=1, select bank3
   468  07F5  1408               	bsf	8,0	;volatile
   469  07F6                     l664:
   470                           
   471                           ;SLAVE_1.c: 51:     conf_ADC();
   472  07F6  120A  118A  27B0  120A  118A  	fcall	_conf_ADC
   473  07FB                     l35:
   474  07FB  0008               	return
   475  07FC                     __end_of_setup:
   476                           
   477                           	psect	text2
   478  07B0                     __ptext2:	
   479 ;; *************** function _conf_ADC *****************
   480 ;; Defined at:
   481 ;;		line 6 in file "../../../LIBRERIAS/ADC/ADC.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;		None
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         0       0       0       0       0
   499 ;;Total ram usage:        0 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_setup
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _conf_ADC
   510  07B0                     _conf_ADC:
   511  07B0                     l646:	
   512                           ;incstack = 0
   513                           ; Regs used in _conf_ADC: [wreg+status,2]
   514                           
   515                           
   516                           ;../../../LIBRERIAS/ADC/ADC.c: 7: ADCON1 = 0b00000000;
   517  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   518  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   519  07B2  019F               	clrf	31	;volatile
   520  07B3                     l648:
   521                           
   522                           ;../../../LIBRERIAS/ADC/ADC.c: 8: ADCON0 = 0b10000001;
   523  07B3  3081               	movlw	129
   524  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   525  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   526  07B6  009F               	movwf	31	;volatile
   527  07B7                     l48:
   528  07B7  0008               	return
   529  07B8                     __end_of_conf_ADC:
   530                           
   531                           	psect	text3
   532  07C3                     __ptext3:	
   533 ;; *************** function _ADC *****************
   534 ;; Defined at:
   535 ;;		line 53 in file "SLAVE_1.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		status,2, status,0, pclath, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0
   551 ;;      Temps:          0       0       0       0       0
   552 ;;      Totals:         0       0       0       0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    1
   556 ;; This function calls:
   557 ;;		_AD_cycle
   558 ;;		_TAD
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _ADC
   566  07C3                     _ADC:
   567  07C3                     l666:	
   568                           ;incstack = 0
   569                           ; Regs used in _ADC: [status,2+status,0+pclath+cstack]
   570                           
   571                           
   572                           ;SLAVE_1.c: 54:     if(ADCON0bits.GO){
   573  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   574  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   575  07C5  1C9F               	btfss	31,1	;volatile
   576  07C6  2FC8               	goto	u11
   577  07C7  2FC9               	goto	u10
   578  07C8                     u11:
   579  07C8  2FCA               	goto	l670
   580  07C9                     u10:
   581  07C9  2FD4               	goto	l39
   582  07CA                     l670:
   583                           
   584                           ;SLAVE_1.c: 57:     TAD();
   585  07CA  120A  118A  27B8  120A  118A  	fcall	_TAD
   586                           
   587                           ;SLAVE_1.c: 58:     AD_cycle();
   588  07CF  120A  118A  27AC  120A  118A  	fcall	_AD_cycle
   589  07D4                     l39:
   590  07D4  0008               	return
   591  07D5                     __end_of_ADC:
   592                           
   593                           	psect	text4
   594  07B8                     __ptext4:	
   595 ;; *************** function _TAD *****************
   596 ;; Defined at:
   597 ;;		line 16 in file "../../../LIBRERIAS/ADC/ADC.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		None
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_ADC
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _TAD
   626  07B8                     _TAD:
   627  07B8                     l652:	
   628                           ;incstack = 0
   629                           ; Regs used in _TAD: []
   630                           
   631  07B8  0000               	nop	;# 
   632  07B9  0000               	nop	;# 
   633  07BA  0000               	nop	;# 
   634  07BB  0000               	nop	;# 
   635  07BC  0000               	nop	;# 
   636  07BD  0000               	nop	;# 
   637  07BE  0000               	nop	;# 
   638  07BF  0000               	nop	;# 
   639  07C0  0000               	nop	;# 
   640  07C1  0000               	nop	;# 
   641  07C2                     l54:
   642  07C2  0008               	return
   643  07C3                     __end_of_TAD:
   644                           
   645                           	psect	text5
   646  07AC                     __ptext5:	
   647 ;; *************** function _AD_cycle *****************
   648 ;; Defined at:
   649 ;;		line 11 in file "../../../LIBRERIAS/ADC/ADC.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		None
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   663 ;;      Params:         0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_ADC
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _AD_cycle
   678  07AC                     _AD_cycle:
   679  07AC                     l654:	
   680                           ;incstack = 0
   681                           ; Regs used in _AD_cycle: []
   682                           
   683                           
   684                           ;../../../LIBRERIAS/ADC/ADC.c: 12: ADCON0bits.GO = 1;
   685  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   686  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   687  07AE  149F               	bsf	31,1	;volatile
   688  07AF                     l51:	
   689                           ;../../../LIBRERIAS/ADC/ADC.c: 14: return;
   690                           
   691  07AF  0008               	return
   692  07B0                     __end_of_AD_cycle:
   693  007E                     btemp	set	126	;btemp
   694  007E                     wtemp0	set	126
   695                           
   696                           	psect	config
   697                           
   698                           ;Config register CONFIG1 @ 0x2007
   699                           ;	Oscillator Selection bits
   700                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   701                           ;	Watchdog Timer Enable bit
   702                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   703                           ;	Power-up Timer Enable bit
   704                           ;	PWRTE = OFF, PWRT disabled
   705                           ;	RE3/MCLR pin function select bit
   706                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   707                           ;	Code Protection bit
   708                           ;	CP = OFF, Program memory code protection is disabled
   709                           ;	Data Code Protection bit
   710                           ;	CPD = OFF, Data memory code protection is disabled
   711                           ;	Brown Out Reset Selection bits
   712                           ;	BOREN = OFF, BOR disabled
   713                           ;	Internal External Switchover bit
   714                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   715                           ;	Fail-Safe Clock Monitor Enabled bit
   716                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   717                           ;	Low Voltage Programming Enable bit
   718                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   719                           ;	In-Circuit Debugger Mode bit
   720                           ;	DEBUG = 0x1, unprogrammed default
   721  2007                     	org	8199
   722  2007  20D7               	dw	8407
   723                           
   724                           ;Config register CONFIG2 @ 0x2008
   725                           ;	Brown-out Reset Selection bit
   726                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   727                           ;	Flash Program Memory Self Write Enable bits
   728                           ;	WRT = OFF, Write protection off
   729  2008                     	org	8200
   730  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _ADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                           _conf_ADC
 ---------------------------------------------------------------------------------
 (2) _conf_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
                           _AD_cycle
                                _TAD
 ---------------------------------------------------------------------------------
 (2) _TAD                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_cycle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _AD_cycle
     _TAD
   _setup
     _conf_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 21 22:38:55 2021

                     l51 07AF                       l35 07FB                       l54 07C2  
                     l39 07D4                       l48 07B7                       u10 07C9  
                     u11 07C8                      _ADC 07C3                      l652 07B8  
                    l660 07F0                      l654 07AC                      l670 07CA  
                    l646 07B0                      l662 07F3                      l648 07B3  
                    l664 07F6                      l656 07E7                      l672 07D5  
                    l666 07C3                      l658 07EA                      l674 07DA  
                    _TAD 07B8                     ?_ADC 0000                     ?_TAD 0000  
                   _main 07D5                     btemp 007E                     start 0000  
                  ??_ADC 0000                    ??_TAD 0000         __end_of_AD_cycle 07B0  
                  ?_main 0000                    _PORTA 0005                    _PORTD 0008  
                  _TRISD 0088                    _setup 07E7                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07E7  
                 ??_main 0000                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   ?_setup 0000         __end_of_conf_ADC 07B8  
              ?_AD_cycle 0000  __end_of__initialization 07FC           __pcstackCOMMON 0000  
          __end_of_setup 07FC                  ??_setup 0000               ??_AD_cycle 0000  
             __pmaintext 07D5                ?_conf_ADC 0000                _ANSELbits 0188  
                __ptext1 07E7                  __ptext2 07B0                  __ptext3 07C3  
                __ptext4 07B8                  __ptext5 07AC             __size_of_ADC 0012  
           __size_of_TAD 000B               ??_conf_ADC 0000     end_of_initialization 07FC  
              _TRISAbits 0085        __size_of_AD_cycle 0004      start_initialization 07FC  
            __end_of_ADC 07D5              __end_of_TAD 07C3                ___latbits 0002  
      __size_of_conf_ADC 0008           __size_of_setup 0015                 _AD_cycle 07AC  
             _ADCON0bits 001F                 _conf_ADC 07B0            __size_of_main 0012  
